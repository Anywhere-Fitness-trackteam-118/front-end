[{"/Users/bradleydion/Desktop/buildweek-3/front-end/landing/src/index.js":"1","/Users/bradleydion/Desktop/buildweek-3/front-end/landing/src/App.js":"2","/Users/bradleydion/Desktop/buildweek-3/front-end/landing/src/reportWebVitals.js":"3","/Users/bradleydion/Desktop/buildweek-3/front-end/landing/src/fakelanding.js":"4","/Users/bradleydion/Desktop/buildweek-3/front-end/landing/src/components/login.js":"5"},{"size":500,"mtime":1611870831468,"results":"6","hashOfConfig":"7"},{"size":232,"mtime":1611871134052,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611870831469,"results":"9","hashOfConfig":"7"},{"size":509,"mtime":1611871326909,"results":"10","hashOfConfig":"7"},{"size":1744,"mtime":1611871363584,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"b4igq2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/bradleydion/Desktop/buildweek-3/front-end/landing/src/index.js",[],["24","25"],"/Users/bradleydion/Desktop/buildweek-3/front-end/landing/src/App.js",[],"/Users/bradleydion/Desktop/buildweek-3/front-end/landing/src/reportWebVitals.js",[],"/Users/bradleydion/Desktop/buildweek-3/front-end/landing/src/fakelanding.js",[],"/Users/bradleydion/Desktop/buildweek-3/front-end/landing/src/components/login.js",["26"],"import {Button, Form, FormGroup, Label, Input} from 'reactstrap'\nimport React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\n\nconst initialValues ={\n    credentials:{\n        username:'',\n        password:''\n    }\n}\nconst Login = ( ) =>{\n    const [state, setState]=useState(initialValues)\n    const history = useHistory()\n   \n     const handleChange = (e) => {\n       setState({\n         credentials: {\n           ...state.credentials,\n           [e.target.name]: e.target.value\n         }\n       });\n     };\n   \n    //  const login = e => {\n    //    e.preventDefault();\n    // //    axios.post(\"http://localhost:5000/api/login\", state.credentials)\n    //    .then(res => {\n    //      localStorage.setItem(\"token\", res.data.payload);\n    //      history.push(\"\");\n    //    })\n    //    .catch(err => console.log(err))\n    //  }\n     return (\n       <>\n         <h1>Please Log In </h1>\n         <Form inline>\n         <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n           <Label for=\"exampleEmail\" className=\"mr-sm-2\">Username</Label>\n           <Input type=\"text\" name=\"username\" id=\"username\" value={state.credentials.username} onChange={handleChange}placeholder=\"Username\" />\n         </FormGroup>\n         <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n           <Label for=\"examplePassword\" className=\"mr-sm-2\">Password</Label>\n           <Input type=\"password\" name=\"password\" id=\"examplePassword\" value={state.credentials.password} onChange={handleChange} placeholder=\"don't tell!\" />\n         </FormGroup>\n         <Button>Submit</Button>\n       </Form>\n       </>\n     );\n   };\n   \n   export default Login;\n//   everything is awesome, everything is cool when youre part of a team\"\n\n// baddummy\n// bradsdummy\n\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":13,"column":11,"nodeType":"33","messageId":"34","endLine":13,"endColumn":18},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]